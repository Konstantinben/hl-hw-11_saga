version: '3.5'

networks:
  postgresnet:
  nginxnet:

services:

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 443:443
    networks:
      - nginxnet
    depends_on:
      - auth-service
      - billingsrv
      - delivery-service
      - order-service

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./volumes/postgres/:/var/lib/postgresql/data
    networks:
      - postgresnet
    expose:
      - 5432
    ports:
      - 5432:5432
    restart: unless-stopped
    
  auth-service:
    image: 'kpolyanichko/hl-hw-11-auth-service-amd64:latest'
    build:
      context: .
    container_name: auth-service
    ports:
      - 8087:8080
    depends_on:
      - postgres
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/postgres
      - DB_PWD=pass
      - DB_USER=postgres
    networks:
      - nginxnet
      - postgresnet
  
  billingsrv:
    image: 'kpolyanichko/hl-hw-11-billing-service-amd64:latest'
    build:
      context: .
    container_name: billingsrv
    ports:
      - 8084:8080
    depends_on:
      - postgres
      - auth-service
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/postgres
      - DB_PWD=pass
      - DB_USER=postgres
      - AUTH_SERVICE_URI=auth-service:8080
    networks:
      - nginxnet
      - postgresnet

  delivery-service:
    image: 'kpolyanichko/hl-hw-11-delivery-service-amd64:latest'
    build:
      context: .
    container_name: delivery-service
    ports:
      - 8082:8080
    depends_on:
      - postgres
      - auth-service
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/postgres
      - DB_PWD=pass
      - DB_USER=postgres
      - AUTH_SERVICE_URI=auth-service:8080
    networks:
      - nginxnet
      - postgresnet

  order-service:
    image: 'kpolyanichko/hl-hw-11-order-service-amd64:latest'
    build:
      context: .
    container_name: order-service
    ports:
      - 8085:8080
    depends_on:
      - postgres
      - auth-service
      - delivery-service
      - billingsrv
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/postgres
      - DB_PWD=pass
      - DB_USER=postgres
      - AUTH_SERVICE_URI=auth-service:8080
      - BILLING_SERVICE_URI=billingsrv:8080
      - DELIVERY_SERVICE_URI=delivery-service:8080
    networks:
      - nginxnet
      - postgresnet
